#+OPTIONS: author:nil date:nil toc:nil
#+LATEX_HEADER_EXTRA:  \usepackage{mdframed}
#+LATEX_HEADER_EXTRA:  \usepackage{fancybox}
#+LATEX_HEADER_EXTRA:  \usepackage{alertmessage}
#+LATEX_HEADER_EXTRA: \BeforeBeginEnvironment{minted}{\begin{mdframed}}
#+LATEX_HEADER_EXTRA: \AfterEndEnvironment{minted}{\end{mdframed}}
#+TITLE:Homework Instructions for CHE576
#+Name: par
#+Begin_src python :exports none :var filename=(buffer-file-name)
import os,json,re,sys
import pycse.orgmode as org
FileNameWithoutExtension=re.split('\.',re.split('/',filename)[-1])[0]
JSONname=FileNameWithoutExtension+'.json'
if not os.path.isfile(JSONname):
    print ("json2dict Error: " + JSONname + " doesn't exist")
    sys.exit()
JSON_file=open(JSONname, "r")
jsondict=json.loads(JSON_file.read())
JSON_file.close()
data = [['parameter_name', 'parameter_value'], None, 
['course', str(jsondict['course'])], 
['term', str(jsondict['term'])],
['classnumber', str(jsondict['classnumber'])], 
['stu_name', str(jsondict['stu_name'])], 
['stuid', str(jsondict['stuid'])], 
['token_type', str(jsondict['token_type'])], 
['token', str(jsondict['token'])], 
['token_expiration', str(jsondict['token_expiration'])], 
['message','Please check the information above.' if str(jsondict['message'])=='' else str(jsondict['message'])],
]
return data
#+end_src
#+RESULTS: par
| parameter_name   | parameter_value                     |
|------------------+-------------------------------------|
| course           | CHE576H1                            |
| term             | Winter Term 2018                    |
| classnumber      | 82604                               |
| stu_name         | Han,Ruijing                         |
| stuid            | 1557000                             |
| token_type       | ACCESS                              |
| token            | Z39WF47J                            |
| token_expiration | Winter Term 2018                    |
| message          | Please check the information above. |

#+begin_src python :var par=par :results output raw :exports none
import pycse.orgmode as org

#org.verbatim("One liner verbatim2\n")
#org.latex("\doublebox{\large\b Please check the following information.}")
latex_string="\\doublebox{%\n\\begin{Bdescription}\n\\item[Course] "+par[0][1]+"\n\\item[Term] "+par[1][1]+"\n\\item[Name] "+par[3][1]+"\n\\item[ID] "+par[4][1]+"\n\\item[Token Type] "+par[5][1]+"\n\\item[Token] "+par[6][1]+"\n\\item[Token Expiration Time] "+par[7][1]+"\n\\item[Remarks] "+par[8][1]+"\n\\end{Bdescription}}"
org.latex(latex_string)
#+end_src

#+RESULTS:


* Something Q&A for you
** What happened to my homework?
   We developed a reproducible homework system which could offer students personalized assignments. 
** What's this sheet?
   This sheet is going to tell you how to finish your personalized assignments and get grades.
   #+BEGIN_LATEX
   \alertwarning{Please keep this sheet properly. The ACCESS token is used for requesting homework documents and getting your grades. Please do not let others know your ACCESS token.}
   #+END_LATEX
** How to use your reproducible homework system?
   Prepare an email account. Email of U of A and Gmail are recommended.
   Download and install Adobe Acrobat PDF Reader.
   #+BEGIN_LATEX
   \alertwarning{Even though your homework is PDF, you may have trouble completing your assignments if you open it with other PDF readers. You need to use Adobe Acrobat PDF Reader to finish your assignments. It's a cross-platform (macOS, Windows, Linux) and free software, and you can download it from \url{https://get.adobe.com/reader/}}
   #+END_LATEX
   

* Homework Request

Personalized homework is offered as PDF
#+BEGIN_LATEX
\alertinfo{You can request for this sheet by sending email with subject: {CHE576}{Request}{Your ID}{Your ACCESS Token}}
#+END_LATEX

* Answer Submit

* Get Grades
